apiVersion: apps/v1
kind: Deployment
metadata:
  name: jetbrainsai2api-minimal
  labels:
    app: jetbrainsai2api
    variant: minimal
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jetbrainsai2api
      variant: minimal
  template:
    metadata:
      labels:
        app: jetbrainsai2api
        variant: minimal
    spec:
      # 极限资源调度配置
      tolerations:
      # 容忍所有污点，最大化调度可能性
      - operator: "Exists"
        effect: "NoSchedule"
      - operator: "Exists"
        effect: "PreferNoSchedule"
      - operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 300
      
      # 设置优先级类别为低优先级
      priorityClassName: system-node-critical
      
      # 最宽松的节点选择
      nodeSelector:
        kubernetes.io/os: linux
      
      # 节点亲和性配置 - 优先选择资源相对充足的节点
      affinity:
        nodeAffinity:
          # 必须满足的条件
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values: ["linux"]
          # 优先满足的条件
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/worker
                operator: Exists
          - weight: 80
            preference:
              matchExpressions:
              - key: node.kubernetes.io/instance-type
                operator: NotIn
                values: ["spot", "preemptible"]
          - weight: 60
            preference:
              matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values: ["amd64"]
        
        # Pod反亲和性 - 避开高资源消耗的Pod
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: resource-intensive
                  operator: In
                  values: ["true"]
              topologyKey: kubernetes.io/hostname
          - weight: 80
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values: ["database", "elasticsearch", "kafka"]
              topologyKey: kubernetes.io/hostname
      
      containers:
      - name: jetbrainsai2api
        image: ghcr.io/GITHUB_USERNAME/jetbrainsai2api:1.0.0
        ports:
        - containerPort: 8000
          name: http
        
        # 极低资源配置
        resources:
          requests:
            memory: "32Mi"
            cpu: "25m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        
        # 环境变量配置
        env:
        - name: DEBUG_MODE
          value: "false"
        - name: PYTHONUNBUFFERED
          value: "1"
        - name: JWT_TOKEN_1
          valueFrom:
            secretKeyRef:
              name: jetbrainsai-secrets
              key: jwt-token-1
              optional: true
        - name: JWT_TOKEN_2
          valueFrom:
            secretKeyRef:
              name: jetbrainsai-secrets
              key: jwt-token-2
              optional: true
        - name: JWT_TOKEN_3
          valueFrom:
            secretKeyRef:
              name: jetbrainsai-secrets
              key: jwt-token-3
              optional: true
        
        # 健康检查配置
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # 启动探测
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        
        # 容器安全上下文
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      
      # Pod安全上下文
      securityContext:
        fsGroup: 1000
      
      # 重启策略
      restartPolicy: Always
      
      # DNS策略
      dnsPolicy: ClusterFirst
      
      # 服务账户
      serviceAccountName: default
      
      # 终止宽限期
      terminationGracePeriodSeconds: 30

# ***
# 水平Pod自动扩展器 - 仅在资源允许时扩展
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: jetbrainsai2api-minimal-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: jetbrainsai2api-minimal
  minReplicas: 1
  maxReplicas: 2
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 180
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60